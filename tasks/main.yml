# Copyright 2017 Yanis Guenane <yguenane@redhat.com>
# Author: Yanis Guenane <yguenane@redhat.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Incluse OS-specific variables
  include_vars: '{{ ansible_os_family }}.yml'


- name: Install the Rally packages
  become: true
  package:
    name: '{{ rally_package_name }}'


- name: Check for db
  shell: source ~/overcloudrc && rally deployment list
  changed_when: false
  failed_when: false
  register: rally_deployment_list_result


- name: Create/upgrade Rally DB schema
  shell: source ~/overcloudrc && rally-manage db recreate
  when:
    - rally_deployment_list_result.stdout | search("Looks like Rally can't connect to it's DB")


- name: Check for existing Rally deployment
  shell: source ~/overcloudrc && rally deployment list
  changed_when: false
  failed_when: false
  register: rally_deployment_list_result


- name: Setup the Rally deployment
  shell: |
    source ~/overcloudrc && rally deployment create --fromenv --name=existing
  when:
    - rally_deployment_list_result.stdout | search("There are no deployments")


- name: Retrieve the rally scenario file
  get_url:
    url: '{{ rally_file_location }}'
    dest: '{{ rally_scenario_filepath }}'
  when: rally_file_location is defined


- name: Run specified scenarios
  shell: source ~/overcloudrc && rally task start '{{ rally_scenario_filepath }}' && rally task report --junit --out rally.xml


- name: Fetch junit results
  fetch:
    src: ~/rally.xml
    dest: "{{ lookup('env', 'PWD') }}/{{ rally_result_filename }}"
    flat: yes
